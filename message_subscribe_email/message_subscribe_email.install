<?php

/**
 * @file
 * Install hooks for the message_subscribe_email module.
 */

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_install().
 *
 * Change message subscription to the new views and create a new field.
 */
function message_subscribe_email_install() {
  // Add the `message_subscribe_email` field to the user form.
  $display = entity_get_form_display('user', 'user', 'default');
  if (!$display->getComponent('message_subscribe_email')) {
    $settings = [
      'type' => 'boolean_checkbox',
      'weight' => 25,
      'settings' => [
        'display_label' => TRUE,
      ],
      'third_party_settings' => [],
    ];
    $display->setComponent('message_subscribe_email', $settings);
    $display->save();
  }

  // Update the UI to use the email views.
  $flags = [
    // Flag name => view name + display.
    'subscribe_node' => 'subscribe_node_email:default',
    'subscribe_term' => 'subscribe_taxonomy_term_email:default',
    'subscribe_user' => 'subscribe_user_email:default',
    // Setup OG in case it exists.
    'subscribe_og' => 'subscribe_node_email:default',
  ];
  foreach ($flags as $flag_id => $view_name) {
    if ($flag = \Drupal::service('flag')->getFlagById($flag_id)) {
      // Verify this hasn't been already overridden.
      $existing = $flag->getThirdPartySetting('message_subscribe_ui', 'view_name');
      if (!$existing || ($existing == str_replace('_email', '', $view_name))) {
        $flag->setThirdPartySetting('message_subscribe_ui', 'view_name', $view_name);
        $flag->save();
      }
    }
  }
}

/**
 * Add an entity reference to the original subscribe flagging.
 */
function message_subscribe_email_update_8100() {
  FieldStorageConfig::create([
    'entity_type' => 'flagging',
    'field_name' => 'subscribe_flagging',
    'type' => 'entity_reference',
    'settings' => [
      'target_type' => 'flagging',
    ],
    'locked' => TRUE,
  ])->setCardinality(1)->save();

  $emailPrefix = \Drupal::config('message_subscribe_email.settings')->get('flag_prefix') . '_';
  $flags = \Drupal::entityTypeManager()->getStorage('flag')->loadMultiple();
  foreach ($flags as $flag) {
    if (strpos($flag->id(), $emailPrefix) === 0) {
      FieldConfig::create([
        'entity_type' => 'flagging',
        'bundle' => $flag->id(),
        'field_name' => 'subscribe_flagging',
        'type' => 'entity_reference',
        'cardinality' => 1,
      ])
        ->setLabel('Subscription flagging')
        ->setDescription('The subscribe flagging that this is tied to.')
        ->setRequired(TRUE)
        ->setSetting('target_type', 'flagging')
        ->setSetting('handler', 'default')
        ->setSetting('handler_settings', [])
        ->save();
    }
  }
}
