<?php

/**
 * @file
 * Install, update, and uninstall functions for the message_subscribe_email module.
 */

use Drupal\Core\Entity\Entity\EntityFormDisplay;

/**
 * Implements hook_install().
 *
 * Change message subscription to the new views and create a new field.
 */
function message_subscribe_email_install() {
  // Add the `message_subscribe_email` field to the user form.
  $display = EntityFormDisplay::load('user.user.default');
  if (!$display->getComponent('message_subscribe_email')) {
    $settings = [
      'type' => 'boolean_checkbox',
      'weight' => 25,
      'settings' => [
        'display_label' => TRUE,
      ],
      'third_party_settings' => [],
    ];
    $display->setComponent('message_subscribe_email', $settings);
    $display->save();
  }

  $variables = array(
    'message_subscribe_node' => 'subscribe_node_email:default',
    'message_subscribe_term' => 'subscribe_taxonomy_term_email:default',
    'message_subscribe_user' => 'subscribe_user_email:default',
    // Setup OG in case it exists.
    'message_subscribe_og' => 'subscribe_node_email:default',
  );

  foreach ($variables as $name => $value) {
//    variable_set($name, $value);
  }
}


/**
 * Implements hook_uninstall().
 */
function message_subscribe_email_uninstall() {
  // Revert message to default values if they haven't been changed.
  $variables = array(
    'message_subscribe_node' => 'subscribe_node_email:default',
    'message_subscribe_term' => 'subscribe_taxonomy_term_email:default',
    'message_subscribe_user' => 'subscribe_user_email:default',
    // Revert OG in case it exists.
    'message_subscribe_og' => 'subscribe_node_email:default',
  );

  foreach ($variables as $name => $value) {
 //   if (variable_get($name) == $value) {
  //    variable_del($name);
   // }
  }
}
