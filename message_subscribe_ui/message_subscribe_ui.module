<?php
/**
 * @file
 * Subscribe API for the Message and Message notify modules.
 */

/**
 * Implements hook_menu().
 */
function message_subscribe_ui_menu() {
  $items = array();
  $items['user/%user/message-subscribe'] = array(
    'title' => 'Subscriptions',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'tab',
    'page arguments' => array(1),
    'access callback' => 'tabAccess',
    'access arguments' => array(1),
  );

  foreach (array_keys(message_subscribe_flag_get_flags()) as $flag_name) {
    // Find the currect view name from a set variable, defaults according to the
    // flag's entity type, e.g. 'user' defaults to 'subscribe_user'.
    $items['user/%user/message-subscribe/' . $flag_name] = array(
      'title callback' => 'message_subscribe_ui_tab_title',
      'title arguments' => array(1, $flag_name),
      'page callback' => 'tab',
      'page arguments' => array(1, $flag_name),
      'access callback' => 'tabAccess',
      'access arguments' => array(1, $flag_name),
      'type' => MENU_LOCAL_TASK,
    );
  }

  return $items;
}


/**
 * Implements hook_permission().
 */
function message_subscribe_permission() {
  return array(
    'administer message subscribe' =>  array(
      'title' => t('Administer message subscribe'),
      'description' => t('Administer user subscriptions.'),
    ),
  );
}

/**
 * Access callback; Determine if  user can access a tab.
 *
 * @param $account
 *   The user object.
 * @param $flag_name
 *   The flag name.
 */
function message_subscribe_ui_tab_access($account, $flag_name = NULL) {
  $user = \Drupal::currentUser();

  if (!$flag_name) {
    // We are inside /message-subscribe so get the first flag.
    $flag_name = key(message_subscribe_flag_get_flags());
  }


  if (!$flag = flag_get_flag($flag_name)) {
    // No flag, or flag is disabled.
    return;
  }

  if (isset($rel_flag->status) && $rel_flag->status === FALSE) {
    // The flag is disabled.
    return;
  }

  if (\Drupal::currentUser()->hasPermission('administer message subscribe')) {
    return TRUE;
  }

  if (!$flag->user_access('unflag', $account) || $account->uid != $user->uid) {
    return;
  }

  return TRUE;
}

/**
 * Title callback; Return the flag name and flagging count.
 *
 * @param $account
 *   The user object.
 * @param $flag_name
 *   The flag name.
 */
function message_subscribe_ui_tab_title($account, $flag_name = NULL) {
  $user = \Drupal::currentUser();

  if (!$flag_name) {
    // We are inside /message-subscribe so get the first flag.
    $flag_name = key(message_subscribe_flag_get_flags());
  }
  $flag = flag_get_flag($flag_name);

  $count = 0;
  // Get the message subscribe count from the page view.
  if ($view = message_subscribe_ui_get_view($account, $flag_name)) {
    $view->get_total_rows = TRUE;
    $view->execute();
    $count = $view->total_rows;
  }

  $params = array(
    '@flag' => $flag->title,
    '@count' => $count,
    '@name' => format_username($account),
  );

  return $account->uid == $user->uid ? t('@flag you follow (@count)', $params) : t('@flag @name follows (@count)', $params);
}

/**
 * Page callback; Call a view to show the user subscription in a flag.
 *
 * @param $account
 *   The user object.
 * @param $flag_name
 *   The flag name.
 *
 * @return
 *   A rendered View, or NULL if View was not found.
 */
function message_subscribe_ui_tab($account, $flag_name = NULL) {
  if (!$flag_name) {
    // We are inside /message-subscribe so get the first flag.
    $flag_name = key(message_subscribe_flag_get_flags());
  }

  $view = message_subscribe_ui_get_view($account, $flag_name);
  return $view ? $view->preview() : '';
}

/**
 * API Call to grab the view object of a message subscribe page.
 *
 * @param $account
 *   The user object.
 * @param $flag_name
 *   The message subscribe flag.
 *
 * @return bool|view
 *   The view, or FALSE if the view was not found
 */
function message_subscribe_ui_get_view($account, $flag_name) {
}
